// <auto-generated />
using System;
using Integrador.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TechOil.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231003202407_techOil")]
    partial class techOil
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Integrador.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("DECIMAL(38,17)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("INT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INT");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INT");

                    b.Property<decimal>("ValueTime")
                        .HasColumnType("DECIMAL(38,17)");

                    b.HasKey("JobId");

                    b.ToTable("job");
                });

            modelBuilder.Entity("Integrador.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("BIT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.HasKey("ProjectId");

                    b.ToTable("project");
                });

            modelBuilder.Entity("Integrador.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("BIT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValueTime")
                        .HasColumnType("DECIMAL(38,17)");

                    b.HasKey("ServiceId");

                    b.ToTable("service");
                });

            modelBuilder.Entity("Integrador.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("BIT");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("VARCHAR(9)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("UserType")
                        .HasColumnType("INT");

                    b.HasKey("UserId");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Active = true,
                            Dni = "42323443",
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "09981d27d4c20b3b0f9dd200df1a8983846de268092a376e1c300b1db24cb81e",
                            UserType = 1
                        },
                        new
                        {
                            UserId = 2,
                            Active = true,
                            Dni = "141324324",
                            Email = "pruebausuario@gmail.com",
                            Name = "Prueba Usuario",
                            Password = "23afa0ecff4c3793135f373179c52bcf6ea1ecb9f6a726b59a279f8c07918a09",
                            UserType = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
